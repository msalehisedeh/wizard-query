{"version":3,"file":"sedeh-wizard-query.umd.js.map","sources":["ng://@sedeh/wizard-query/src/app/wizard-query/wizard-query.service.ts","ng://@sedeh/wizard-query/src/app/wizard-query/wizard-query.component.ts","ng://@sedeh/wizard-query/src/app/wizard-query/wizard-query.directive.ts","ng://@sedeh/wizard-query/src/app/wizard-query/wizard-query.module.ts"],"sourcesContent":["/*\n* Query service provides a way to query a remote JSON or XML file. It can be used in following ways.\n*\n* 1) With select() method, a single path or a list of paths can be given. each path will be a json qualifying\n* path to an end node (i.e., 'books.book.title'). If multiple paths are supplied, query result will be a json\n* object where each attribute will be a given query path and its value will be query result for that path.\n* For example:\n* select(['books.book.title', 'books.book.author'], '/example1.xml', false)\n* will result in {'books.book.title': [], 'books.book.author': []}.\n* Each result will not co-related with other result in order or in any other form. if a clause argument is\n* supplied, it will be invoked to further assist in filtering the query result. for example if certain category\n* of books are required, the clause function can look for a book category attribute and return the query result\n* if acceptable or undefined if result should be filtered out of the result.\n*\n* 2) With arraySelect() method, an array of {path: '', in:'', deepXml: true} can be supplied, each entry will be evaluated\n* as if select() method is invoked. But first, requests with similar paths will be merged into one call.  This\n* method is useful when paths are dynamicly given and it is not clear in advance if there are requests with\n* similar paths. deepXml attribute is optional.\n*\n* 3) With chainSelect() method, a chained set of {path: '', in: '', deepXml: true} is given in a json object. When result of\n* a query becomes available, the request json will be examined to see if a request for the key is available. If\n* so, then the 'in' for the path will be prepended to the resulting value of the previous query. , deepXml attribute is \n* optional. This method is useful when result of a query is a json or an xml file and additional query is needed \n* further down in the preceeding files. For example the assumption in the following call is that each books.book \n* result will be a file name and the file path for each result is '/samples/books/'.\n* chainSelect({\n*   path: 'books.book',\n*   in: 'sample1.xml',\n*   deepXml: true,\n*   'books.book': {\n*       in: '/samples/books/',\n*       path: ['publication.title', 'publication.author'],\n*       handler: this.bublicationHandler\n*   })\n* if a handler is supplied, it will be used to filter out any result that is not acceptable.\n*\n*/\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport {map} from 'rxjs/operators';\nimport {BehaviorSubject} from 'rxjs';\nimport * as xmldom from 'xmldom';\n\n/*\n* @param node The parent node. it can be used to evaluate based on other attributes in the node.\n* @param path attribute to be examined.\n* @param value the value of the path. it could be undefined, a literal, or a list.\n* @returns returns the value or filtered version of the value or undefined otherwise.\n*/\nexport type clauseEvaluator = (node: any, path: string, value: any) => any;\n\n@Injectable()\nexport class WizardQueryService {\n\n    public SERVICE_PATH = '';\n    public logEnabled = false;\n\n    constructor(\n      private http: HttpClient\n    ) {\n\n    }\n\n    private _globalFunctions() {\n        return `\n        function reverse(a) {\n            var result = a;\n            if (a instanceof Array) {\n                result = a.reverse();\n            } else if (typeof a === 'string') {\n                result = a.split('').reverse().join('');\n            }\n            return result;\n        }\n        function sum(a,b) {\n            var total = 0;\n            if (a instanceof Array) { \n                a.map(function(k) {\n                    total += sum(k, b);\n                });\n            } else if (typeof a === 'object') {\n                if (b.indexOf('.')>0) {\n                    var t = a;\n                    b.split('.').map(function(k){\n                        total+=sum( t[k], b.substring(k.length+1) );\n                    });\n                } else if(a[b]) {\n                    var t = a[b];\n                    total += (typeof t === 'number') ? t : parseFloat(t);\n                } \n            } else if (typeof a === 'number') {\n                total = a;\n            } \n            return total;\n        }\n        function count(a,b) {\n            var total = 0;\n            if (a instanceof Array) { \n                a.map(function(k) {\n                    total += count(k, b);\n                });\n            } else if (typeof a === 'object') {\n                Object.keys(a).map(function(k){\n                    total += count(a[k],b);\n                });\n            } else if (typeof a === 'string') {\n                total = a.split(b).length - 1;\n            } else if (a === b) {\n                total++;\n            }\n            return total;\n        }\n        function like(a, b) {\n            var result = undefined;\n            if (a instanceof Array) {\n                result = [];\n                a.map(function(k) {\n                    result.push(like(k, b));\n                });\n            } else if (typeof a === 'object') {\n                result = [];\n                Object.keys(a).map(function(k){\n                    result.push(like(a[k], b));\n                });\n            } else if (typeof a === 'string') {\n                if (a.indexOf(b) > -1) {\n                    result = a;\n                }\n            } else if (a === b) {\n                result = a;\n            }\n            return result;\n        }\n        function as(a, b) {\n            if (asList[b] === undefined) {\n                asList[b] = [a];\n            } else {\n                asList[b].push(a);\n            }\n            return a;\n        }\n        function is_in(a, b, list) {\n            var result = undefined;\n            if (b instanceof Array) { \n                result = [];\n                b.map(function(k) {\n                    result.push(is_in(k, list));\n                });\n            } else if (typeof b === 'object') {\n                result = [];\n                Object.keys(b).map(function(k) {\n                    result.push(is_in(b[k], list));\n                });\n            } else if (asList[list]){\n                asList[list].map(function(t) {\n                    if (typeof t ==='string') {\n                        if (t.indexOf(b) > -1) {\n                            result = a;\n                        }\n                    }\n                });\n            }\n            return result;\n        }\n        `;\n    }\n\n    /*\n    * Will normalize the given xml out of additional #text or #cdata-section nodes.\n    * @param value the xml to be normailzed.\n    * @param deepXml if cdata-section should be parsed.\n    * @return normalized xml.\n    */\n    private _normalize(value: any, deepXml: boolean) {\n        if (value instanceof Array) {\n            const result = [];\n            value.map( (item) => {\n                result.push(this._normalize(item, deepXml));\n            });\n            value = result;\n        } else if (typeof value === 'object') {\n            let items: any = Object.keys(value);\n\n            if (items.length === 1 && !(value[items[0]] instanceof Array)) {\n                if (value['#text']) {\n                    value = value['#text'];\n                } else if (value['#cdata-section']) {\n                    value = value['#cdata-section'];\n                    if (deepXml) {\n                        try {\n                            const xml = new xmldom.DOMParser().parseFromString(value);\n                            value = (xml.documentElement && xml.documentElement != null) ?\n                                        this._xml2json(xml.documentElement) :\n                                        value;\n                        }catch(e){\n                        }\n                    }\n                }\n            } else {\n                const result = {};\n                items.map( (item) => {\n                    result[item] = this._normalize(value[item], deepXml);\n                });\n                value = result;\n            }\n        }\n        return value;\n    }\n\n    /*\n    * @param path JSON path to evaluate. A path could be fully qualified for depth of json (i.e., 'a.b.c')\n    * @param data the data source.\n    * @param deepXml if cdata-section should be parsed.\n    * @param clause A method by which value(s) for the key(s) could be evaluated. the caller would evaluate the value for a given attribute.\n    * @returns returns evluated value for the key in data source.\n    */\n    private _valueOfJsonPath(\n        path: any,\n        data: any,\n        as: any,\n        deepXml: boolean,\n        clause?: clauseEvaluator): any {\n\n        let result: any;\n        let x = this._normalize(data, deepXml);\n        path.map( (subkey: any) => {\n            let node = x;\n            if (node && node instanceof Array) {\n                const t = [];\n                if (subkey.sort) {\n                    node = subkey.sort(node);\n                }\n                node.map (\n                    (item) => {\n                        if (typeof item === 'object') {\n                            if (subkey.key.length) {\n                                x = subkey.key.length ? item[subkey.key] : item;\n                                if (x && subkey.validated) {\n                                    let r = true;\n                                    subkey.validated.map(v => {\n                                        const z = v(x, as);\n                                        if (typeof z === 'boolean') {\n                                            if(z  == false) {\n                                                r = false;\n                                            }\n                                        } else {\n                                            x = z;\n                                        }\n                                    });\n                                    if (r && x) {\n                                        t.push(x);\n                                    } else {\n                                        x = undefined;\n                                    }\n                                }\n                            } else {\n                                if (subkey.validated) {\n                                    let r = true;\n                                    subkey.validated.map(v => {\n                                        const z = v(item, as);\n                                        if (typeof z === 'boolean') {\n                                            if(z  == false) {\n                                                r = false;\n                                            }\n                                        } else {\n                                            item = z;\n                                        }\n                                    });\n                                    if (r && item) {\n                                        t.push(item);\n                                    } else {\n                                        x = undefined;\n                                    }\n                                } else {\n                                    t.push(item);\n                                }\n                            }\n                        } else if (subkey.key.length && (typeof item === 'string')) {\n                            item.split('.').map(\n                                (str) => {\n                                    if (str.indexOf(subkey.key) >= 0) {\n                                        t.push(str);\n                                    }\n                                }\n                            )\n                        }\n                    }\n                );\n                x = t;\n                result = x;\n            } else if (node && (typeof node === 'object')) {\n                x = x ?\n                    clause(node, subkey.key, subkey.key.length ? x[subkey.key]:  x) :\n                    undefined;\n                if (x && x instanceof Array) {\n                    const t = [];\n                    if (subkey.sort) {\n                        x = subkey.sort(x);\n                    }\n                    x.map(\n                        (item: any) => {\n                            if (subkey.validated) {\n                                let r = true;\n                                subkey.validated.map(v => {\n                                    const z = v(item, as);\n                                    if (typeof z === 'boolean') {\n                                        if(z  == false) {\n                                            r = false;\n                                        }\n                                    } else {\n                                        item = z;\n                                    }\n                                });\n                                if (r && item) {\n                                    t.push(item);\n                                } else {\n                                    x = undefined;\n                                }\n                            }\n                        }\n                    );\n                    x = t;\n                    result = x;\n                } else if (x) {\n                    if (subkey.validated) {\n                        let r = true;\n                        subkey.validated.map(v => {\n                            const z = v(x, as);\n                            if (typeof z === 'boolean') {\n                                if(z  == false) {\n                                    r = false;\n                                }\n                            } else {\n                                x = z;\n                            }\n                        });\n                        if (r && x) {\n                            result = x;\n                        } else {\n                            x = undefined;\n                        }\n                    } else {\n                        result = x;\n                    }\n                }\n            } else if (node && (typeof node === 'string') && subkey.key.length) {\n                result = [];\n                node.split('.').map(\n                    (item) => {\n                        if (item.indexOf(subkey.key) >= 0) {\n                            result.push(item);\n                        }\n                    }\n                )\n            } else {\n                result = node;\n            }\n        });\n        return result;\n    }\n\n    private _get(path: string) {\n        const url = this.SERVICE_PATH + path;\n        const dot = path.lastIndexOf('.');\n        const ext = dot < 0 ? undefined : path.toLowerCase().substr(dot);\n        const headers = new HttpHeaders();\n        let result: any;\n\n        headers.set('Access-Control-Allow-Origin', '*');\n\n        if (ext === '.xml') {\n            headers.set('Content-Type', 'text; charset=utf-8').set('Accept', 'text');\n            result = this.http.get(url, { headers, responseType: 'text' })\n                .pipe(map((res) => {\n                    const xml = new xmldom.DOMParser().parseFromString(res);\n                    const json = this._xml2json(xml.documentElement);\n                    return json;\n                })\n            );\n        } else if (ext === '.txt') {\n            headers.set('Content-Type', 'text; charset=utf-8').set('Accept', 'text');\n            result = this.http.get(url, { headers, responseType: 'text' }).pipe(map((res) => res));\n        } else if (ext === '.json'){\n            headers.set('Content-Type', 'json; charset=utf-8').set('Accept', 'json');\n            result = this.http.get(url, {headers}).pipe(map((res) => res));\n        } else {\n            headers.set('Content-Type', 'text; charset=utf-8').set('Accept', 'text');\n            result = this.http.get(url, { headers, responseType: 'text' })\n                .pipe(map((res) => {\n                    let parsed: any;\n                    try {\n                        parsed = JSON.parse(res);\n                    }catch (e) {\n                        try {\n                            const xml = new xmldom.DOMParser().parseFromString(res);\n                            parsed = this._xml2json(xml.documentElement);\n                        } catch (e2) {\n                            parsed = res;\n                        }\n                    };\n                    return parsed ? parsed : res;\n                })\n            );\n        }\n        return result;\n    }\n\n    private _stringValueOfKey(key: any) {\n        let result: any = [];\n\n        if (key instanceof Array) {\n            key.map( \n                (item: any) => {\n                    if (item instanceof Array) {\n                        let x = [];\n                        item.map(\n                            (subitem) => {\n                                if (subitem.key.length) {\n                                    x.push(subitem.key);\n                                }\n                            }\n                        )\n                        result.push(x.join('.'));\n                    } else if (typeof item === 'string') {\n                        const i = item.indexOf('[');\n                        const j = item.indexOf(']');\n                        const k = item.length > (j + 1) ? 2 : 1;\n                        result.push(i > 0 ? item.substring(0,i) : j > 0 ? item.substring(j + k) : item);\n                    } else if (item.key.length) {\n                        result.push(item.key);\n                    }\n                }\n            );\n            result = result.join(',');\n            result = result.indexOf('.') < 0 ? result.replace(/\\,/g, '.') : result;\n        } else {\n            result = key.key;\n        }\n        return result;\n    }\n\n    private _addToResult(value: any, key: string, operation: any, action: any) {\n        const path = this._stringValueOfKey(action.path);\n        const key2 = this._stringValueOfKey(key);\n        let op = operation.result[path];\n        let complete = false;\n    \n        if (!op) {\n            operation.result[path] = {};\n        }\n        if (op) {\n            let opk = op[key2];\n            if (operation['temp'] &&\n                operation['temp'][key2]) {\n                op[key2] = [op[key2]];\n                delete operation['temp'];\n            }else if (opk && (opk instanceof Array) === false) {\n                operation.result[path][key2] = [opk]\n                op = operation.result[path];\n            }\n            value = this._normalize(value, action.deepXml);\n            if (op[key2]) {\n                if (typeof value === 'object') {\n                    if (JSON.stringify(value) !== JSON.stringify(op[key2][0])) {\n                        op[key2].push( value[key2] ? value[key2] : value );\n                    }\n                } else {\n                    op[key2].push( value[key2] ? value[key2] : value );\n                }\n            } else {\n                if ((op instanceof Array) === false) {\n                    operation.result[path] = [op];\n                    operation.result[path].push( value[key2] ? value[key2] : value );\n                } else {\n                    if (typeof value === 'object') {\n                        if (JSON.stringify(value) !== JSON.stringify(op[0])) {\n                            op.push( value[key2] ? value[key2] : value );\n                        }\n                    } else {\n                        op.push( value[key2] ? value[key2] : value );\n                    }\n                }\n            }\n        } else {\n            if (value instanceof Array) {\n                // if already an array remember it.\n                if (!operation['temp']) {\n                    operation['temp'] = {};\n                }\n                if (!operation['temp'][key2]) {\n                    operation['temp'][key2] = true;\n                }\n            }\n            operation.result[path][key2] = this._normalize(value, action.deepXml);\n            complete = true;\n        }\n        return complete;\n    }\n\n    private _pack(result: any) {\n        if (result instanceof Array) {\n            const list = [];\n            result.map(\n                (item) => {\n                    list.push(this._pack(item));\n                }\n            );\n            result = list;\n        } else if (typeof result === 'object') {\n            const keys = Object.keys(result);\n            keys.map (\n                (key) => {\n                    const item = result[key];\n                    if (item instanceof Array) {\n\n                    } else if (item[key]) {\n                        result[key] = item[key];\n                    }\n                }\n            )\n        }\n        return result;\n    }\n\n    private _triggerResult(promise: any, as: any, result: any) {\n        const x = this._pack(result);\n        let saveAs: any;\n        if (as) {\n            if (typeof as === 'string') {\n                saveAs = {};\n                saveAs[as] = x;\n            } else if (typeof as === 'object') {\n                saveAs = as;\n            }\n        }\n        promise.next(x);\n        return saveAs;\n    }\n\n    private _subquery(\n        promise: any,\n        path: any,\n        operation: any,\n        action: any) {\n\n        if (operation.cachedFiles[path] === undefined) {\n            // one of the keys at this level could be referencing the same file which\n            // is not yet fetched. need to wait till it is available.\n            operation.cachedFiles[path] = new BehaviorSubject<any>(null);\n            this._queryIteration(\n                operation.cachedFiles[path],\n                operation,\n                {\n                    path: action.path,\n                    in: action.in,\n                    deepXml: action.deepXml,\n                    join: action.join,\n                    handler: action.handler,\n                    queryItems: (action.path instanceof Array) ? action.path.length : 1\n                },\n                path\n            );\n        }\n\n        // wait for result raised above.\n        operation.cachedFiles[path].subscribe(\n            (source: any) => {\n                if (source) {\n                    const opkeyi = action.join ? action.join[action.path] : undefined;\n                    if (opkeyi) {\n                        if (source instanceof Array) {\n                            source.map(\n                                (item) => {\n                                    this._subquery(\n                                        promise,\n                                        item,\n                                        operation,\n                                        {\n                                            path: opkeyi.path,\n                                            in: opkeyi.in == undefined ? action.in : (opkeyi.in + item),\n                                            deepXml: opkeyi.deepXml,\n                                            join: opkeyi.join,\n                                            handler: opkeyi.handler,\n                                            queryItems: (opkeyi.path instanceof Array) ? opkeyi.path.length : 1\n                                        }\n                                    );\n                                }\n                            )\n                        } else {\n                            this._subquery(\n                                promise,\n                                source,\n                                operation,\n                                {\n                                    path: action.join[opkeyi.path],\n                                    in: opkeyi.in == undefined ? action.in : (opkeyi.in + source),\n                                    deepXml: action.deepXml,\n                                    join: opkeyi.join,\n                                    handler: opkeyi.handler,\n                                    queryItems: (opkeyi.path instanceof Array) ? opkeyi.path.length : 1\n                                }\n                            );\n                        }\n                    } else if (this._addToResult(source, action.path, operation, action)) {\n                        action.queryItems--;\n                        if (action.queryItems === 0) {\n                            operation.as = this._triggerResult(promise, operation.as, operation.result);\n                        }\n                    }else {\n                        action.queryItems--;\n                        operation.as = this._triggerResult(promise, operation.as, operation.result);\n                    }\n                }\n            },\n            (error: any) => {\n                if (this.logEnabled) {\n                    console.log(error);\n                }\n                action.queryItems--;\n                operation.as = this._triggerResult(promise, operation.as, operation.result);\n           }\n        );\n    }\n    /*\n    * Iterates through a chain query.\n    * @param promise The promise which original caller is waiting for.\n    * @param operation data for keeping track of the iteration.\n    * @param action contains: {path: current keys to query for, in: current query path, handler: resolver method}.\n    * @param cacheNamed The cached name from previous iteration if any.\n    * @returns returns none.\n    */\n    private _queryIteration(\n        promise: BehaviorSubject<any>,\n        operation: any,\n        action: any,\n        cacheNamed?: string) {\n\n        if (!action.handler) {\n            action.handler = (node: any, path: string, value: any) => value;\n        }\n        this._select(action.path, action.in, action.deepXml, operation.as, action.handler).subscribe(\n            (data) => {\n                if (data) {\n                    if (cacheNamed) {\n                        // result of n-th level call to be placed on previous level cache reference.\n                        operation.cachedFiles[cacheNamed].next(data);\n                    } else {\n                        if (data instanceof Array) {\n                            const operationalKey = action.join ? action.join[action.path] : undefined;\n                            if (operationalKey) {\n                                // assumption is the resulting list is a list of file paths.\n                                data.map( (content) => {\n                                    const path = content['#text'] ? content['#text'] : content;\n                                    let size = (operationalKey.path instanceof Array) ? operationalKey.path.length : 1;\n\n                                    if (operationalKey.in == undefined) {\n                                        operation.cachedFiles[path] = this._select(\n                                            operationalKey.path,\n                                            action.in,\n                                            operationalKey.deepXml,\n                                            operation.as,\n                                            operationalKey.handler\n                                        );\n                                        size --;\n                                    }\n                                    this._subquery(promise, path, operation, {\n                                        path: operationalKey.path,\n                                        in: operationalKey.in == undefined ? action.in : (operationalKey.in + content),\n                                        deepXml: operationalKey.deepXml,\n                                        join: operationalKey.join,\n                                        handler: operationalKey.handler,\n                                        queryItems: size\n                                    });\n                                });\n                            } else {\n                                // no more query in the chain.\n                                action.queryItems--;\n                                if (action.queryItems === 0) {\n                                    const result =operation.result ? operation.result : {};\n                                    operation.as = this._triggerResult(promise, operation.as, Object.keys(operation.result).length ? operation.result : data);\n                                }\n                            }\n                        } else if (typeof data === 'object') {\n                            Object.keys(data).map( (key) => {\n                                const content = data[key];\n                                const operationalKey = action.join ? action.join[key]: undefined;\n    \n                                if (content && content.length && operationalKey) {\n                                    let size = (operationalKey.path instanceof Array) ? operationalKey.path.length : 1;\n                                    if (operationalKey.in == undefined) {\n                                        operation.cachedFiles[content] = this._select(\n                                            operationalKey.path,\n                                            action.in,\n                                            operationalKey.deepXml,\n                                            operation.as,\n                                            operationalKey.handler\n                                        );\n                                        size --;\n                                    }\n                                    this._subquery(\n                                        promise,\n                                        content,\n                                        operation,\n                                        {\n                                            path: operationalKey.path,\n                                            in: operationalKey.in == undefined ? action.in : (operationalKey.in + content),\n                                            deepXml: operationalKey.deepXml,\n                                            handler: operationalKey.handler,\n                                            queryItems: size\n                                        }\n                                    );\n                                } else {\n                                    action.queryItems--;\n                                    if (content) {\n                                        if (!operation.result) {\n                                            operation.result = {};\n                                        }\n                                        if (operation.result instanceof Array) {\n                                            operation.result.push(content);\n                                        } else {\n                                            operation.result[key] = content;\n                                        }\n                                    }\n                                    if (action.queryItems === 0) {\n                                        operation.as = this._triggerResult(promise, operation.as, Object.keys(operation.result).length ? operation.result : data);\n                                    }\n                                }\n                            });\n                        } else {\n                            action.queryItems--;\n                            if (action.queryItems === 0) {\n                                if (Object.keys(operation.result).length === 0 && data !== undefined) {\n                                    operation.result = data;\n                                }\n                            }\n                            operation.as = this._triggerResult(promise, operation.as, operation.result);\n                        }\n                    }\n                }\n            },\n            (error: any) => {\n                promise.error({\n                    message: 'failed to query ' + action.path,\n                    reason: error.message ? error.message : error\n                });\n                action.queryItems--;\n                if (action.queryItems === 0) {\n                    operation.as = this._triggerResult(promise, operation.as, operation.result);\n                }\n            }\n        );\n    }\n\n    private _makeArguments(key: string) {\n        const list = key.split('.');\n        const result = [];\n        list.map( (item) => {\n            const b = item.indexOf('[');\n            if (b < 0) {\n                result.push({\n                    key: item,\n                    validated: [(data: any, as: any) => true]\n                });\n            } else {\n                let str = item.substring(b + 1, item.length - 1);\n                const vList = str.split('][');\n                const object = {\n                    key: item.substring(0,b),\n                    validated: [(data: any, as: any) => true]\n                };\n                vList.map( \n                    (filter) => {\n                        filter = filter.replace(/\\`/g, '.');\n                        filter = filter.replace(/\\@/g, 'data');\n                        if (filter.indexOf('order-by:') > -1) {\n                            const arg: any = filter.substring(filter.indexOf('order-by:') + 10).trim();\n                            const arglist = arg.split('~');\n                            const key = arglist[0].trim();\n                            const order= arglist[1] ? arglist[1].trim().toLowerCase(): 'asc';\n                            object['sort'] = function (array: any) {\n                                const _valueOf = (key: string, p: any) => {\n                                    key.split('.').map( (x) => {p = p[x]});\n                                    return p;\n                                }\n                                return array.sort(\n                                    function(a: any,b: any){\n                                        const flag =_valueOf(key, a) > _valueOf(key, b);\n                                        return flag ? (order === 'asc' ? 1: -1) : (order === 'asc' ? -1: 1);\n                                    }\n                                );\n                            }\n                        }else {\n                            const t = filter.indexOf('&&') > 0 || filter.indexOf('||') > 0;\n                            let f = 'return function (data, asList) { \\n';\n                            f += this._globalFunctions();\n                            f += 'var x = false;\\n try{\\n x = ';\n                            f += (t ? '(' + filter + ')' : filter) + '; \\n}catch(e){}\\n return x;\\n}';\n                            object['validated'].push( new Function(f)() );\n                        }\n                    }\n                );\n                result.push(object);\n            }\n        });\n        return result;\n    }\n\n    private _handleSpecialCharacters(path: string) {\n        let result = [];\n        path.split(']').map(\n            (item) => {\n                const bindex = item.indexOf('[');\n                if (bindex >= 0) {\n                    let x = '';\n                    if ( bindex > 0) {\n                        x += item.substring(0, bindex);\n                    }\n                    x += item.substring(bindex).replace(/\\./g,'`');\n                    result.push(x);\n                } else {\n                    result.push(item);\n                }\n            }\n        );\n        return result.join(']');\n    }\n    private _prepareJsonPath(path: any) {\n        let result: any;\n        if (path instanceof Array) {\n            result = [];\n            path.map(\n                (i) => {\n                    const x = this._handleSpecialCharacters(i);\n                    result.push(this._makeArguments(x));\n                }\n            );\n        } else {\n            const x = this._handleSpecialCharacters(path);\n            result = this._makeArguments(x);\n        }\n        return result;\n    }\n    \n    private _select(\n        path: any,\n        from: string,\n        deepXml: boolean,\n        as: any,\n        clause?: clauseEvaluator): BehaviorSubject<any> {\n\n        const dataStore = new BehaviorSubject<any>(null);\n\n        this._get(from).subscribe(\n            (data: any) => {\n                let result: any;\n                const jpath = this._prepareJsonPath(path);\n\n                if (!clause) {\n                    clause = (node: any, path: string, value: any) => value;\n                }\n                if (path instanceof Array) {\n                    result = {};\n                    jpath.map((pathItem) => {\n                        const y = this._valueOfJsonPath(pathItem, data, as, deepXml, clause);\n                        if (y) {\n                            let key = this._stringValueOfKey(pathItem);\n                            result[key] = y;\n                        }\n                    });\n                    if (Object.keys(result).length === 0) {\n                        result = undefined;\n                    }\n                } else if (typeof path === 'string') {\n                    result = this._valueOfJsonPath(jpath, data, as, deepXml, clause);\n                }\n                if (result) {\n                    dataStore.next(result);\n\n                } else {\n                    dataStore.error('Result not found for ' + path);\n                }\n            },\n            (error: any) => {\n                dataStore.error(error);\n            }\n        );\n        return dataStore;\n    }\n\n    /*\n    * Will convert the xml into a json.\n    * @param xml XML to be converted.\n    * @returns returns converted JSON.\n    */\n    private _xml2json(xml: any) {\n        try {\n            let obj = {};\n            if (xml.attributes) {\n                const c = xml.attributes;\n                for (let i = 0; i < c.length; i++) {\n                const attr = c[i];\n                obj[attr.name] = attr.value;\n                }\n            }\n            if (xml.childNodes && xml.childNodes.length) {\n                for (let i = 0; i < xml.childNodes.length; i++) {\n                    const item = xml.childNodes[i];\n                    const nodeName = item.nodeName;\n\n                    if (obj[nodeName] === undefined) {\n                        const fragment = this._xml2json(item);\n                        if (fragment) {\n                        obj[nodeName] = fragment;\n                        }\n                    } else {\n                        if (obj[nodeName].push === undefined) {\n                            const old = obj[nodeName];\n\n                            obj[nodeName] = [];\n                            obj[nodeName].push(old);\n                        }\n                        const fragment = this._xml2json(item);\n                        if (fragment) {\n                            obj[nodeName].push(fragment);\n                        }\n                    }\n                }\n            } else {\n                const text = xml.textContent.trim().replace(/(?:\\r\\n|\\r|\\n|\\t)/g, '');\n                obj = text.length ? text : undefined;\n            }\n            return obj;\n        } catch (e) {\n            if (this.logEnabled) {\n                console.log(e.message);\n            }\n        }\n    }\n\n    /*\n    * Will do a chain query on specified paths from remote location.\n    * @param chainQuery A Json structure with paths. Each path will contain a chain of instructions.\n    * Each instruction will have a 'in' to a file and a path to search on it (see. select()). once the\n    * result is in, the next instruction in the path chain will be trigged. After the path through all\n    * chained paths is completed, resulting value will be put in a json where its path is the original\n    * json path and its value will be the resulting value.\n    *\n    * this is not fully tested. caller should pass something like\n    * {path: [path1,path2], in: 'something or blank', deepXml: true, join: {k1: {path: path3, in: 'something or plank', clause: function}}}\n    * if path1 or path2 or path3 are found at the root object, a chain reaction to fetch deep will follow. An\n    * optional clause will help resolve complex situations.\n    *\n    * @returns returns an observable. the caller should subscribe to this in order to receive the result.\n    */\n    chainSelect(chainQuery: any): BehaviorSubject<any> {\n        const size = (chainQuery.path instanceof Array) ?  chainQuery.path.length : 1;\n        const operation = {cachedFiles: {}, as: {}, result: {}};\n        const dataStore = new BehaviorSubject<any>(null);\n\n        operation.cachedFiles[chainQuery.path] = dataStore;\n        this._queryIteration(\n            dataStore,\n            operation,\n            {\n                path: chainQuery.path,\n                in: chainQuery.in,\n                deepXml: chainQuery.deepXml,\n                join: chainQuery.join,\n                handler: chainQuery.handler,\n                queryItems: size\n            }\n        );\n        return dataStore;\n    }\n\n    /*\n    * Will group file paths if they are similar to avoid multiple calls.\n    * @param list A list of Json {paths, in, deepXml} structures. deepXml is optional.\n    * @param clause A method by which value(s) for the path(s) could be evaluated. the caller would evaluate the value for a given attribute.\n    * @returns returns an observable. the caller should subscribe to this in order to receive the result.\n    */\n    arraySelect(\n        list: any,\n        clause?: clauseEvaluator): BehaviorSubject<any>  {\n        const groupedList = {};\n        list.map( (item: any) => {\n            if (groupedList[item.in] === undefined) {\n                groupedList[item.in] = [];\n            }\n            groupedList[item.in].push({path: item.path, deepXml: item.deepXml});\n        });\n        const dataStore = new BehaviorSubject<any>(null);\n\n        Object.keys(groupedList).map ( (url) => {\n            this._select(groupedList[url].path, url, groupedList[url].deepXml, undefined, clause).subscribe(\n                (data: any) => {\n                    if (data) {\n                        dataStore.next(data);\n                    }\n                },\n                (error: any) => {\n                    dataStore.error(error);\n                }\n            );\n        });\n        return dataStore;\n    }\n\n    /*\n    * Will query path from a remote location qualified through an optional clause function that\n    * evaluates, filters, or sorts the resul of the query.\n    * @param path A a single JSON path or list of paths to select (i.e., 'a.b.c')\n    * @param from A reference URL to a remote source.\n    * @param deepXml if cdata-section should be parsed.\n    * @param clause A method by which value(s) for the path(s) could be evaluated. the caller would evaluate the value for a given attribute.\n    * @returns returns an observable. the caller should subscribe to this in order to receive the result.\n    */\n    select(\n        path: any,\n        from: string,\n        deepXml: boolean,\n        clause?: clauseEvaluator): BehaviorSubject<any> {\n\n        return this._select(path, from, deepXml, undefined, clause);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { WizardQueryService } from './wizard-query.service';\n\n@Component({\n  selector: 'wizard-query',\n  templateUrl: './wizard-query.html',\n  styleUrls: ['./wizard-query.scss']\n})\nexport class WizardQueryComponent {\n  selectedDocumentName: string;\n\n  data: any;\n  source: any;\n  query: any;\n  \n  @Input()\n  set queryInfo(data: any) {\n    this.query = data;\n    if (this.query) {\n      this.selectedDocumentName = this.query.in.substring(this.query.in.lastIndexOf('/'));\n      this.queryService.chainSelect({\n        in: this.query.in,\n        path: ''\n      }).subscribe(\n        (success) => {\n          if(success) {\n            this.source = success;\n            this.data = undefined;\n          }\n        },\n        (error) => {\n          this.source = error;\n          this.data = undefined;\n        }\n      );\n    } else {\n      this.data = undefined;\n      this.source = undefined;\n    }\n  }\n\n  constructor(private queryService: WizardQueryService) {\n  }\n\n  private parseFunctions(content: any) {\n    if (content instanceof Array) {\n      content.map(\n        (item) => {\n          this.parseFunctions(item);\n        }\n      )\n    } else if (typeof content === 'object') {\n      Object.keys(content).map(\n        (key) => {\n          if (key === 'handler') {\n            content[key] = new Function('return function' + content[key])();\n          } else {\n            this.parseFunctions(content[key]);\n          }\n        }\n      );\n    }\n  }\n\n  executeQuery(text: any) {\n    try {\n      const content = JSON.parse(text.value);\n      this.parseFunctions(content)\n      if (content instanceof Array) {\n        this.queryService.arraySelect(content).subscribe(\n          (success) => {\n            if(success) {\n              this.data = success;\n            }\n          },\n          (error) => {\n            this.data = {alert: error};\n          }\n        );\n      } else {\n        this.queryService.chainSelect(content).subscribe(\n          (success) => {\n            if(success) {\n              this.data = success;\n            }\n          },\n          (error) => {\n            this.data = {alert: error};\n          }\n        );\n      }\n    }catch (err) {\n      this.data = {alert: err.message};\n    }\n  }\n}\n","import {\r\n    Directive,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { WizardQueryService } from './wizard-query.service';\r\n\r\n@Directive({\r\n    selector: '[wizardQuery]'\r\n})\r\nexport class WizardQueryDirective {\r\n    query: any;\r\n\r\n            \r\n    @Output()\r\n    onQueryResult: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output()\r\n    onQueryError: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input()\r\n    set wizardQuery(info: any) {\r\n        this.query = info;\r\n        if (this.query) {\r\n            if (this.query instanceof Array) {\r\n                this.queryService.arraySelect(this.query).subscribe(\r\n                    (success) => {\r\n                        if(success) {\r\n                            this.onQueryResult.emit(success);\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        this.onQueryResult.emit({alert: error});\r\n                    }\r\n                );\r\n            } else {\r\n                this.queryService.chainSelect(this.query).subscribe(\r\n                    (success) => {\r\n                        if(success) {\r\n                            this.onQueryResult.emit(success);\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        this.onQueryResult.emit({alert: error});\r\n                    }\r\n                );\r\n            }\r\n        } else {\r\n            this.onQueryResult.emit(undefined);\r\n        }\r\n    }\r\n\r\n    constructor(private queryService: WizardQueryService) {}\r\n\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { WizardQueryComponent } from './wizard-query.component';\nimport { WizardQueryService } from './wizard-query.service';\nimport { WizardQueryDirective } from './wizard-query.directive';\n\n\n@NgModule({\n  declarations: [\n    WizardQueryComponent,\n    WizardQueryDirective\n  ],\n  exports: [\n    WizardQueryComponent,\n    WizardQueryDirective\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    WizardQueryService\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class WizardQueryModule { }\n"],"names":["http","xmldom.DOMParser","HttpHeaders","map","BehaviorSubject","Injectable","HttpClient","Component","Input","EventEmitter","Directive","Output","NgModule","CommonModule","HttpClientModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}
