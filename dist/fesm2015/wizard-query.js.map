{"version":3,"file":"wizard-query.js.map","sources":["ng://wizard-query/src/app/wizard-query/wizard-query.service.ts","ng://wizard-query/src/app/wizard-query/wizard-query.component.ts","ng://wizard-query/src/app/wizard-query/wizard-query.directive.ts","ng://wizard-query/src/app/wizard-query/wizard-query.module.ts"],"sourcesContent":["/*\n* Query service provides a way to query a remote JSON or XML file. It can be used in following ways.\n*\n* 1) With select() method, a single path or a list of paths can be given. each path will be a json qualifying\n* path to an end node (i.e., 'books.book.title'). If multiple paths are supplied, query result will be a json\n* object where each attribute will be a given query path and its value will be query result for that path.\n* For example:\n* select(['books.book.title', 'books.book.author'], '/example1.xml', false)\n* will result in {'books.book.title': [], 'books.book.author': []}.\n* Each result will not co-related with other result in order or in any other form. if a clause argument is\n* supplied, it will be invoked to further assist in filtering the query result. for example if certain category\n* of books are required, the clause function can look for a book category attribute and return the query result\n* if acceptable or undefined if result should be filtered out of the result.\n*\n* 2) With arraySelect() method, an array of {path: '', in:'', deepXml: true} can be supplied, each entry will be evaluated\n* as if select() method is invoked. But first, requests with similar paths will be merged into one call.  This\n* method is useful when paths are dynamicly given and it is not clear in advance if there are requests with\n* similar paths. deepXml attribute is optional.\n*\n* 3) With chainSelect() method, a chained set of {path: '', in: '', deepXml: true} is given in a json object. When result of\n* a query becomes available, the request json will be examined to see if a request for the key is available. If\n* so, then the 'in' for the path will be prepended to the resulting value of the previous query. , deepXml attribute is \n* optional. This method is useful when result of a query is a json or an xml file and additional query is needed \n* further down in the preceeding files. For example the assumption in the following call is that each books.book \n* result will be a file name and the file path for each result is '/samples/books/'.\n* chainSelect({\n*   path: 'books.book',\n*   in: 'sample1.xml',\n*   deepXml: true,\n*   'books.book': {\n*       in: '/samples/books/',\n*       path: ['publication.title', 'publication.author'],\n*       handler: this.bublicationHandler\n*   })\n* if a handler is supplied, it will be used to filter out any result that is not acceptable.\n*\n*/\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport {map} from 'rxjs/operators';\nimport {BehaviorSubject} from 'rxjs';\nimport * as xmldom from 'xmldom';\n\n/*\n* @param node The parent node. it can be used to evaluate based on other attributes in the node.\n* @param path attribute to be examined.\n* @param value the value of the path. it could be undefined, a literal, or a list.\n* @returns returns the value or filtered version of the value or undefined otherwise.\n*/\nexport type clauseEvaluator = (node: any, path: string, value: any) => any;\n\n@Injectable()\nexport class WizardQueryService {\n\n    public SERVICE_PATH = '';\n    public logEnabled = false;\n\n    constructor(\n      private http: HttpClient\n    ) {\n\n    }\n\n    /*\n    * Will normalize the given xml out of additional #text or #cdata-section nodes.\n    * @param value the xml to be normailzed.\n    * @param deepXml if cdata-section should be parsed.\n    * @return normalized xml.\n    */\n    private _normalize(value: any, deepXml: boolean) {\n        if (value instanceof Array) {\n            const result = [];\n            value.map( (item) => {\n                result.push(this._normalize(item, deepXml));\n            });\n            value = result;\n        } else if (typeof value === 'object') {\n            let items: any = Object.keys(value);\n\n            if (items.length === 1 && !(value[items[0]] instanceof Array)) {\n                if (value['#text']) {\n                    value = value['#text'];\n                } else if (value['#cdata-section']) {\n                    value = value['#cdata-section'];\n                    if (deepXml) {\n                        try {\n                            const xml = new xmldom.DOMParser().parseFromString(value);\n                            value = (xml.documentElement && xml.documentElement != null) ?\n                                        this._xml2json(xml.documentElement) :\n                                        value;\n                        }catch(e){\n                        }\n                    }\n                }\n            } else {\n                const result = {};\n                items.map( (item) => {\n                    result[item] = this._normalize(value[item], deepXml);\n                });\n                value = result;\n            }\n        }\n        return value;\n    }\n\n    /*\n    * @param path JSON path to evaluate. A path could be fully qualified for depth of json (i.e., 'a.b.c')\n    * @param data the data source.\n    * @param deepXml if cdata-section should be parsed.\n    * @param clause A method by which value(s) for the key(s) could be evaluated. the caller would evaluate the value for a given attribute.\n    * @returns returns evluated value for the key in data source.\n    */\n    private _valueOfJsonPath(\n        path: any,\n        data: any,\n        deepXml: boolean,\n        clause?: clauseEvaluator): any {\n\n        let result: any;\n        let x = this._normalize(data, deepXml);\n        path.map( (subkey: any) => {\n            let node = x;\n            if (node && node instanceof Array) {\n                const t = [];\n                if (subkey.sort) {\n                    node = subkey.sort(node);\n                }\n                node.map (\n                    (item) => {\n                        if (typeof item === 'object') {\n                            if (subkey.key.length) {\n                                x = subkey.key.length ? item[subkey.key] : item;\n                                if (x && subkey.validated) {\n                                    let r = true;\n                                    subkey.validated.map(v => {\n                                        if(v(x) == false) {\n                                            r = false;\n                                        }\n                                    });\n                                    if (r) {\n                                        t.push(x);\n                                    } else {\n                                        x = undefined;\n                                    }\n                                }\n                            } else {\n                                if (subkey.validated) {\n                                    let r = true;\n                                    subkey.validated.map(v => {\n                                        if(v(item) == false) {\n                                            r = false;\n                                        }\n                                    });\n                                    if (r) {\n                                        t.push(item);\n                                    } else {\n                                        x = undefined;\n                                    }\n                                } else {\n                                    t.push(item);\n                                }\n                            }\n                        } else if (subkey.key.length && (typeof item === 'string')) {\n                            item.split('.').map(\n                                (str) => {\n                                    if (str.indexOf(subkey.key) >= 0) {\n                                        t.push(str);\n                                    }\n                                }\n                            )\n                        }\n                    }\n                );\n                x = t;\n                result = x;\n            } else if (node && (typeof node === 'object')) {\n                x = x ?\n                    clause(node, subkey.key, subkey.key.length ? x[subkey.key]:  x) :\n                    undefined;\n                if (x && x instanceof Array) {\n                    const t = [];\n                    if (subkey.sort) {\n                        x = subkey.sort(x);\n                    }\n                    x.map(\n                        (item: any) => {\n                            if (subkey.validated) {\n                                let r = true;\n                                subkey.validated.map(v => {\n                                    if(v(item) == false) {\n                                        r = false;\n                                    }\n                                });\n                                if (r) {\n                                    t.push(item);\n                                } else {\n                                    x = undefined;\n                                }\n                            }\n                        }\n                    );\n                    x = t;\n                    result = x;\n                } else if (x) {\n                    if (subkey.validated) {\n                        let r = true;\n                        subkey.validated.map(v => {\n                            if(v(x) == false) {\n                                r = false;\n                            }\n                        });\n                        if (r) {\n                            result = x;\n                        } else {\n                            x = undefined;\n                        }\n                    } else {\n                        result = x;\n                    }\n                }\n            } else if (node && (typeof node === 'string') && subkey.key.length) {\n                result = [];\n                node.split('.').map(\n                    (item) => {\n                        if (item.indexOf(subkey.key) >= 0) {\n                            result.push(item);\n                        }\n                    }\n                )\n            } else {\n                result = node;\n            }\n        });\n        return result;\n    }\n\n    private _get(path: string) {\n        const url = this.SERVICE_PATH + path;\n        const dot = path.lastIndexOf('.');\n        const ext = dot < 0 ? undefined : path.toLowerCase().substr(dot);\n        const headers = new HttpHeaders();\n        let result: any;\n\n        headers.set('Access-Control-Allow-Origin', '*');\n\n        if (ext === '.xml') {\n            headers.set('Content-Type', 'text; charset=utf-8').set('Accept', 'text');\n            result = this.http.get(url, { headers, responseType: 'text' })\n                .pipe(map((res) => {\n                    const xml = new xmldom.DOMParser().parseFromString(res);\n                    const json = this._xml2json(xml.documentElement);\n                    return json;\n                })\n            );\n        } else if (ext === '.txt') {\n            headers.set('Content-Type', 'text; charset=utf-8').set('Accept', 'text');\n            result = this.http.get(url, { headers, responseType: 'text' }).pipe(map((res) => res));\n        } else if (ext === '.json'){\n            headers.set('Content-Type', 'json; charset=utf-8').set('Accept', 'json');\n            result = this.http.get(url, {headers}).pipe(map((res) => res));\n        } else {\n            headers.set('Content-Type', 'text; charset=utf-8').set('Accept', 'text');\n            result = this.http.get(url, { headers, responseType: 'text' })\n                .pipe(map((res) => {\n                    let parsed: any;\n                    try {\n                        parsed = JSON.parse(res);\n                    }catch (e) {\n                        try {\n                            const xml = new xmldom.DOMParser().parseFromString(res);\n                            parsed = this._xml2json(xml.documentElement);\n                        } catch (e2) {\n                            parsed = res;\n                        }\n                    };\n                    return parsed ? parsed : res;\n                })\n            );\n        }\n        return result;\n    }\n\n    private _stringValueOfKey(key: any) {\n        const result = [];\n\n        if (key instanceof Array) {\n            key.map( \n                (item: any) => {\n                    if (item instanceof Array) {\n                        let x = [];\n                        item.map(\n                            (subitem) => {\n                                if (subitem.key.length) {\n                                    x.push(subitem.key);\n                                }\n                            }\n                        )\n                        result.push(x.join('.'));\n                    } else if (typeof item === 'string') {\n                        const i = item.indexOf('[');\n                        const j = item.indexOf(']');\n                        const k = item.length > (j + 1) ? 2 : 1;\n                        result.push(i > 0 ? item.substring(0,i) : j > 0 ? item.substring(j + k) : item);\n                    } else if (item.key.length) {\n                        result.push(item.key);\n                    }\n                }\n            )\n        } else {\n            result.push(key.key)\n        }\n        return result.join(',');\n    }\n\n    private _addToResult(value: any, key: string, operation: any, action: any) {\n        const path = this._stringValueOfKey(action.path);\n        const key2 = this._stringValueOfKey(key);\n        let op = operation.result[path];\n        let complete = false;\n    \n        if (!op) {\n            operation.result[path] = {};\n        }\n        if (op) {\n            let opk = op[key2];\n            if (operation['temp'] &&\n                operation['temp'][key2]) {\n                op[key2] = [op[key2]];\n                delete operation['temp'];\n            }else if (opk && (opk instanceof Array) === false) {\n                operation.result[path][key2] = [opk]\n                op = operation.result[path];\n            }\n            value = this._normalize(value, action.deepXml);\n            if (op[key2]) {\n                op[key2].push( value[key2] ? value[key2] : value );\n            } else {\n                if ((op instanceof Array) === false) {\n                    operation.result[path] = [op];\n                    operation.result[path].push( value[key2] ? value[key2] : value );\n                } else {\n                    op.push( value[key2] ? value[key2] : value );\n                }\n            }\n        } else {\n            if (value instanceof Array) {\n                // if already an array remember it.\n                if (!operation['temp']) {\n                    operation['temp'] = {};\n                }\n                if (!operation['temp'][key2]) {\n                    operation['temp'][key2] = true;\n                }\n            }\n            operation.result[path][key2] = this._normalize(value, action.deepXml);\n            complete = true;\n        }\n        return complete;\n    }\n\n    private _pack(result: any) {\n        if (result instanceof Array) {\n            const list = [];\n            result.map(\n                (item) => {\n                    list.push(this._pack(item));\n                }\n            );\n            result = list;\n        } else if (typeof result === 'object') {\n            const keys = Object.keys(result);\n            keys.map (\n                (key) => {\n                    const item = result[key];\n                    if (item instanceof Array) {\n\n                    } else if (item[key]) {\n                        result[key] = item[key];\n                    }\n                }\n            )\n        }\n        return result;\n    }\n\n    private _triggerResult(promise: any, result: any) {\n        promise.next(this._pack(result));\n    }\n\n    private _subquery(\n        promise: any,\n        path: any,\n        operation: any,\n        action: any) {\n\n        if (operation.cachedFiles[path] === undefined) {\n            // one of the keys at this level could be referencing the same file which\n            // is not yet fetched. need to wait till it is available.\n            operation.cachedFiles[path] = new BehaviorSubject<any>(null);\n            this._queryIteration(\n                operation.cachedFiles[path],\n                operation,\n                {\n                    path: action.path,\n                    in: action.in,\n                    deepXml: action.deepXml,\n                    join: action.join,\n                    queryItems: (action.path instanceof Array) ? action.path.length : 1\n                },\n                path\n            );\n        }\n\n        // wait for result raised above.\n        operation.cachedFiles[path].subscribe(\n            (source: any) => {\n                if (source) {\n                    const opkeyi = action.join ? action.join[action.path] : undefined;\n                    if (opkeyi) {\n                        if (source instanceof Array) {\n                            source.map(\n                                (item) => {\n                                    this._subquery(\n                                        promise,\n                                        item,\n                                        operation,\n                                        {\n                                            path: opkeyi.path,\n                                            in: opkeyi.in + item,\n                                            deepXml: opkeyi.deepXml,\n                                            join: opkeyi.join,\n                                            queryItems: (opkeyi.path instanceof Array) ? opkeyi.path.length : 1\n                                        }\n                                    );\n                                }\n                            )\n                        } else {\n                            this._subquery(\n                                promise,\n                                source,\n                                operation,\n                                {\n                                    path: action.join[opkeyi.path],\n                                    in: opkeyi.in + source,\n                                    deepXml: action.deepXml,\n                                    join: opkeyi.join,\n                                    queryItems: (opkeyi.path instanceof Array) ? opkeyi.path.length : 1\n                                }\n                            );\n                        }\n                    } else if (this._addToResult(source, action.path, operation, action)) {\n                        action.queryItems--;\n                        if (action.queryItems === 0) {\n                            this._triggerResult(promise, operation.result);\n                        }\n                    }else {\n                        action.queryItems--;\n                        this._triggerResult(promise, operation.result);\n                    }\n                }\n            },\n            (error: any) => {\n                if (this.logEnabled) {\n                    console.log(error);\n                }\n                action.queryItems--;\n                this._triggerResult(promise, operation.result);\n           }\n        );\n    }\n    /*\n    * Iterates through a chain query.\n    * @param promise The promise which original caller is waiting for.\n    * @param operation data for keeping track of the iteration.\n    * @param action contains: {path: current keys to query for, in: current query path, handler: resolver method}.\n    * @param cacheNamed The cached name from previous iteration if any.\n    * @returns returns none.\n    */\n    private _queryIteration(\n        promise: BehaviorSubject<any>,\n        operation: any,\n        action: any,\n        cacheNamed?: string) {\n\n        if (!action.handle) {\n            action.handler = (node: any, path: string, value: any) => value;\n        }\n        this.select(action.path, action.in, action.deepXml, action.handler).subscribe(\n            (data) => {\n                if (data) {\n                    if (cacheNamed) {\n                        // result of n-th level call to be placed on previous level cache reference.\n                        operation.cachedFiles[cacheNamed].next(data);\n                    } else {\n                        if (data instanceof Array) {\n                            const operationalKey = action.join ? action.join[action.path] : undefined;\n                            if (operationalKey) {\n                                // assumption is the resulting list is a list of file paths.\n                                data.map( (content) => {\n                                    const path = content['#text'] ? content['#text'] : content;\n                                    this._subquery(promise, path, operation, {\n                                        path: operationalKey.path,\n                                        in: operationalKey.in + content,\n                                        deepXml: operationalKey.deepXml,\n                                        join: operationalKey.join,\n                                        queryItems: (operationalKey.path instanceof Array) ? operationalKey.path.length : 1\n                                    });\n                                });\n                            } else {\n                                // no more query in the chain.\n                                action.queryItems--;\n                                if (action.queryItems === 0) {\n                                    const result =operation.result ? operation.result : {};\n                                    this._triggerResult(promise, Object.keys(operation.result).length ? operation.result : data);\n                                }\n                            }\n                        } else if (typeof data === 'object') {\n                            Object.keys(data).map( (key) => {\n                                const content = data[key];\n                                const operationalKey = action.join ? action.join[key]: undefined;\n    \n                                if (content && content.length && operationalKey) {\n                                    this._subquery(\n                                        promise,\n                                        content,\n                                        operation,\n                                        {\n                                            path: operationalKey.path,\n                                            in: operationalKey.in + content,\n                                            deepXml: operationalKey.deepXml,\n                                            queryItems: (operationalKey.path instanceof Array) ? operationalKey.path.length : 1\n                                        }\n                                    );\n                                } else {\n                                    action.queryItems--;\n                                    if (content) {\n                                        if (!operation.result) {\n                                            operation.result = {};\n                                        }\n                                        if (operation.result instanceof Array) {\n                                            operation.result.push(content);\n                                        } else {\n                                            operation.result[key] = content;\n                                        }\n                                    }\n                                    if (action.queryItems === 0) {\n                                        this._triggerResult(promise, Object.keys(operation.result).length ? operation.result : data);\n                                    }\n                                }\n                            });\n                        } else {\n                            action.queryItems--;\n                            if (action.queryItems === 0) {\n                                if (Object.keys(operation.result).length === 0 && data !== undefined) {\n                                    operation.result = data;\n                                }\n                            }\n                            this._triggerResult(promise, operation.result);\n                        }\n                    }\n                }\n            },\n            (error: any) => {\n                promise.error('failed to query ' + action.path);\n                action.queryItems--;\n                if (action.queryItems === 0) {\n                    this._triggerResult(promise, operation.result);\n                }\n            }\n        );\n    }\n\n    private _makeArguments(key: string) {\n        const list = key.split('.');\n        const result = [];\n        list.map( (item) => {\n            const b = item.indexOf('[');\n            if (b < 0) {\n                result.push({\n                    key: item,\n                    validated: [(data) => true]\n                });\n            } else {\n                let str = item.substring(b + 1, item.length - 1);\n                const vList = str.split('][');\n                const object = {\n                    key: item.substring(0,b),\n                    validated: [(data) => true]\n                };\n                vList.map( \n                    (filter) => {\n                        filter = filter.replace(/\\`/g, '.');\n                        filter = filter.replace(/\\@/g, 'data');\n                        if (filter.indexOf('order-by:') > -1) {\n                            const arg: any = filter.substring(filter.indexOf('order-by:') + 10).trim();\n                            const arglist = arg.split('~');\n                            const key = arglist[0].trim();\n                            const order= arglist[1] ? arglist[1].trim().toLowerCase(): 'asc';\n                            object['sort'] = function (array: any) {\n                                const _valueOf = (key: string, p: any) => {\n                                    key.split('.').map( (x) => {p = p[x]});\n                                    return p;\n                                }\n                                return array.sort(\n                                    function(a: any,b: any){\n                                        const flag =_valueOf(key, a) > _valueOf(key, b);\n                                        return flag ? (order === 'asc' ? 1: -1) : (order === 'asc' ? -1: 1);\n                                    }\n                                );\n                            }\n                        }else {\n                            filter = 'return function (data) { var x = false; try{ x = (' + filter + '); }catch(e){} return x;}';\n                            object['validated'].push( new Function(filter)() );\n                        }\n                    }\n                );\n                result.push(object);\n            }\n        });\n        return result;\n    }\n\n    private _prepareJsonPath(path: any) {\n        let result: any;\n        if (path instanceof Array) {\n            result = [];\n            path.map(\n                (i) => {\n                    const x = i.replace(/([\\[(])(.+?)([\\])])/g, (match, p1, p2, p3, offset, s) => {\n                        return p1 + p2.replace(/\\./g,'`') + p3;\n                    });\n                    result.push(this._makeArguments(x));\n                }\n            );\n        } else {\n            path = path ? path : '';\n            const x = path.replace(/([\\[(])(.+?)([\\])])/g, (match, p1, p2, p3, offset, s) => {\n                return p1 + p2.replace(/\\./g,'`') + p3;\n            });\n            result = this._makeArguments(x);\n        }\n        return result;\n    }\n    \n\n    /*\n    * Will convert the xml into a json.\n    * @param xml XML to be converted.\n    * @returns returns converted JSON.\n    */\n    private _xml2json(xml: any) {\n        try {\n            let obj = {};\n            if (xml.attributes) {\n                const c = xml.attributes;\n                for (let i = 0; i < c.length; i++) {\n                const attr = c[i];\n                obj[attr.name] = attr.value;\n                }\n            }\n            if (xml.childNodes && xml.childNodes.length) {\n            for (let i = 0; i < xml.childNodes.length; i++) {\n                const item = xml.childNodes[i];\n                const nodeName = item.nodeName;\n\n                if (obj[nodeName] === undefined) {\n                    const fragment = this._xml2json(item);\n                    if (fragment) {\n                    obj[nodeName] = fragment;\n                    }\n                } else {\n                if (obj[nodeName].push === undefined) {\n                    const old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                }\n                const fragment = this._xml2json(item);\n                if (fragment) {\n                    obj[nodeName].push(fragment);\n                }\n                }\n            }\n            } else {\n            const text = xml.textContent.trim().replace(/(?:\\r\\n|\\r|\\n|\\t)/g, '');\n            obj = text.length ? text : undefined;\n            }\n            return obj;\n        } catch (e) {\n            if (this.logEnabled) {\n                console.log(e.message);\n            }\n        }\n    }\n\n    /*\n    * Will do a chain query on specified paths from remote location.\n    * @param chainQuery A Json structure with paths. Each path will contain a chain of instructions.\n    * Each instruction will have a 'in' to a file and a path to search on it (see. select()). once the\n    * result is in, the next instruction in the path chain will be trigged. After the path through all\n    * chained paths is completed, resulting value will be put in a json where its path is the original\n    * json path and its value will be the resulting value.\n    *\n    * this is not fully tested. caller should pass something like\n    * {path: [path1,path2], in: 'something or blank', deepXml: true, join: {k1: {path: path3, in: 'something or plank', clause: function}}}\n    * if path1 or path2 or path3 are found at the root object, a chain reaction to fetch deep will follow. An\n    * optional clause will help resolve complex situations.\n    *\n    * @returns returns an observable. the caller should subscribe to this in order to receive the result.\n    */\n    chainSelect(chainQuery: any): BehaviorSubject<any> {\n        const size = (chainQuery.path instanceof Array) ?  chainQuery.path.length : 1;\n        const operation = {cachedFiles: {}, result: {}};\n        const dataStore = new BehaviorSubject<any>(null);\n\n        this._queryIteration(\n            dataStore,\n            operation,\n            {\n                path: chainQuery.path,\n                in: chainQuery.in,\n                deepXml: chainQuery.deepXml,\n                join: chainQuery.join,\n                queryItems: size\n            }\n        );\n        return dataStore;\n    }\n\n    /*\n    * Will group file paths if they are similar to avoid multiple calls.\n    * @param list A list of Json {paths, in, deepXml} structures. deepXml is optional.\n    * @param clause A method by which value(s) for the path(s) could be evaluated. the caller would evaluate the value for a given attribute.\n    * @returns returns an observable. the caller should subscribe to this in order to receive the result.\n    */\n    arraySelect(\n        list: any,\n        clause?: clauseEvaluator): BehaviorSubject<any>  {\n        const groupedList = {};\n        list.map( (item: any) => {\n            if (groupedList[item.in] === undefined) {\n                groupedList[item.in] = [];\n            }\n            groupedList[item.in].push({path: item.path, deepXml: item.deepXml});\n        });\n        const dataStore = new BehaviorSubject<any>(null);\n\n        Object.keys(groupedList).map ( (url) => {\n            this.select(groupedList[url].path, url, groupedList[url].deepXml, clause).subscribe(\n                (data: any) => {\n                    if (data) {\n                        dataStore.next(data);\n                    }\n                },\n                (error: any) => {\n                    dataStore.error(error);\n                }\n            );\n        });\n        return dataStore;\n    }\n\n    /*\n    * Will query path from a remote location qualified through an optional clause function that\n    * evaluates, filters, or sorts the resul of the query.\n    * @param path A a single JSON path or list of paths to select (i.e., 'a.b.c')\n    * @param from A reference URL to a remote source.\n    * @param deepXml if cdata-section should be parsed.\n    * @param clause A method by which value(s) for the path(s) could be evaluated. the caller would evaluate the value for a given attribute.\n    * @returns returns an observable. the caller should subscribe to this in order to receive the result.\n    */\n    select(\n        path: any,\n        from: string,\n        deepXml: boolean,\n        clause?: clauseEvaluator): BehaviorSubject<any> {\n\n        const dataStore = new BehaviorSubject<any>(null);\n\n        this._get(from).subscribe(\n            (data: any) => {\n                let result: any;\n                const jpath = this._prepareJsonPath(path);\n\n                if (!clause) {\n                    clause = (node: any, path: string, value: any) => value;\n                }\n                if (path instanceof Array) {\n                    result = {};\n                    jpath.map((pathItem) => {\n                        const y = this._valueOfJsonPath(pathItem, data, deepXml, clause);\n                        if (y) {\n                            let key = this._stringValueOfKey(pathItem);\n                            result[key] = y;\n                        }\n                    });\n                    if (Object.keys(result).length === 0) {\n                        result = undefined;\n                    }\n                } else if (typeof path === 'string') {\n                    result = this._valueOfJsonPath(jpath, data, deepXml, clause);\n                }\n                if (result) {\n                    dataStore.next(result);\n\n                } else {\n                    dataStore.error('Result not found for ' + path);\n                }\n            },\n            (error: any) => {\n                dataStore.error(error);\n            }\n        );\n        return dataStore;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { WizardQueryService } from './wizard-query.service';\n\n@Component({\n  selector: 'wizard-query',\n  templateUrl: './wizard-query.html',\n  styleUrls: ['./wizard-query.scss']\n})\nexport class WizardQueryComponent {\n  selectedDocumentName: string;\n\n  data: any;\n  source: any;\n  query: any;\n  \n  @Input()\n  set queryInfo(data: any) {\n    this.query = data;\n    if (this.query) {\n      this.selectedDocumentName = this.query.in.substring(this.query.in.lastIndexOf('/'));\n      this.queryService.chainSelect({\n        in: this.query.in,\n        path: ''\n      }).subscribe(\n        (success) => {\n          if(success) {\n            this.source = success;\n            this.data = undefined;\n          }\n        },\n        (error) => {\n          this.source = error;\n          this.data = undefined;\n        }\n      );\n    } else {\n      this.data = undefined;\n      this.source = undefined;\n    }\n  }\n\n  constructor(private queryService: WizardQueryService) {\n  }\n\n  executeQuery(text: any) {\n    const content = JSON.parse(text.value);\n    this.queryService.chainSelect(content).subscribe(\n      (success) => {\n        if(success) {\n          this.data = success;\n        }\n      },\n      (error) => {\n        this.data = error;\n      }\n    );\n  }\n}\n","import {\r\n    Directive,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { WizardQueryService } from './wizard-query.service';\r\n\r\n@Directive({\r\n    selector: '[wizardQuery]'\r\n})\r\nexport class WizardQueryDirective {\r\n    query: any;\r\n\r\n            \r\n    @Output()\r\n    onQueryResult: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output()\r\n    onQueryError: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input()\r\n    set wizardQuery(info: any) {\r\n        this.query = info;\r\n        if (this.query) {\r\n            if (this.query instanceof Array) {\r\n                this.queryService.arraySelect(this.query).subscribe(\r\n                    (success) => {\r\n                        if(success) {\r\n                            this.onQueryResult.emit(success);\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        this.onQueryResult.emit(error);\r\n                    }\r\n                );\r\n            } else {\r\n                this.queryService.chainSelect(this.query).subscribe(\r\n                    (success) => {\r\n                        if(success) {\r\n                            this.onQueryResult.emit(success);\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        this.onQueryResult.emit(error);\r\n                    }\r\n                );\r\n            }\r\n        } else {\r\n            this.onQueryResult.emit(undefined);\r\n        }\r\n    }\r\n\r\n    constructor(private queryService: WizardQueryService) {}\r\n\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { WizardQueryComponent } from './wizard-query.component';\nimport { WizardQueryService } from './wizard-query.service';\nimport { WizardQueryDirective } from './wizard-query.directive';\n\n\n@NgModule({\n  declarations: [\n    WizardQueryComponent,\n    WizardQueryDirective\n  ],\n  exports: [\n    WizardQueryComponent,\n    WizardQueryDirective\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    WizardQueryService\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class WizardQueryModule { }\n"],"names":["xmldom.DOMParser"],"mappings":"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"}
